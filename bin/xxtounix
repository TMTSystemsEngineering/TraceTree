#! /usr/bin/perl
# License Terms
# 
# Copyright (c) 2006,2007,2008,2009,2010,2011,2012,2013, California 
# Institute of Technology ("Caltech").  U.S. Government sponsorship 
# acknowledged. 
# 
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are 
# met: 
# 
# 
# *   Redistributions of source code must retain the above copyright 
#     notice, this list of conditions and the following disclaimer.
# 
# *   Redistributions in binary form must reproduce the above copyright 
#     notice, this list of conditions and the following disclaimer in the 
#     documentation and/or other materials provided with the distribution.
# 
# *   Neither the name of Caltech nor its operating division, the Jet 
#     Propulsion Laboratory, nor the names of its contributors may be used 
#     to endorse or promote products derived from this software without 
#     specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
require "fileutils.pl" ;
$rootdirname = "ttrnew" ;
if (@ARGV) { $rootdirname = "$rootdirname/$ARGV[0]" ; }
print "xxtounix: doing $rootdirname\n" ;

# lnks and txts and xmls and attrs are the only things coming from dos
if ($ARGV[0] ne "-test")
{
  @filelist = getfilelistrecursive ($rootdirname, "\\.(lnks|attr|txt|xml)\$") ;
}
else
{
  push @filelist, "qwer" ;
}

# print join "\n", @filelist ; print "\n" ;

$incount = 0 ;
$outcount = 0 ;
$nfiles = scalar @filelist ;
foreach $filename (@filelist)
{
  next if -d $filename ;   # shouldn't need this, but...
  open IN, $filename or die "Couldn't open $filename for reading: $!\n" ;
  $/ = undef ;
  $lines = <IN> ;   # scarf it all up
  close IN ;
  $incount++ ;


  if ($lines =~ s/\r\n/\n/g) 
  {
    open OUT, "> $filename" 
	or die "Couldn't open $filename for writing: $!\n" ;
    print OUT $lines ;
    $outcount++ ;
  }
  close OUT ;
  if ($incount%100 == 0) 
  { 
    print STDERR "Done with $incount of $nfiles files, wrote $outcount\r" ;
  }
}
print "Done with $incount of $nfiles files, wrote $outcount\n" ;

